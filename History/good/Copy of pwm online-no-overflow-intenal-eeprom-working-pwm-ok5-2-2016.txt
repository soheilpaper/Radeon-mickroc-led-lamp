                                                                       program MyProject
' Declarations section
 dim hours, minutes, seconds, day, week, month, year as byte    ' Global date/time variables
    Interupt_first_time, on_test as byte
dim var_in_global as Byte
dim counter as integer
'module MyProject
dim txt_inin as string[6]
dim kp1, ok1 ,K_set_max as byte
dim kp,ok,k_set,week_new,chanel_active,chanel,Pwm_Percent,Pwm_chanel,Pwm_chanel_main ,Yes_no,on_off,on_off2 as  byte
'dim on_off as  byte
'dim v as string[4]
dim year_new as byte
dim while_state_blinking,while_satat as bit
dim oldstate,oldstate_up,oldstate_down,oldstate_ok,oldstate_ww,while_state,while_satate_in_1 as bit
dim oldstate_4,oldstate_3,while_state_import,oldstate_2,while_state_import_main as bit
dim while_state_2,oldstate_menu as bit
' Lcd module connections
dim LCD_RS as sbit at PORTc2_bit
dim LCD_EN as sbit at PORTc3_bit
dim LCD_D4 as sbit at PORTc4_bit
dim LCD_D5 as sbit at PORTc5_bit
dim LCD_D6 as sbit at PORTc6_bit
dim LCD_D7 as sbit at PORTc7_bit

dim LCD_RS_Direction as sbit at DDc2_bit
dim LCD_EN_Direction as sbit at DDc3_bit
dim LCD_D4_Direction as sbit at DDc4_bit
dim LCD_D5_Direction as sbit at DDc5_bit
dim LCD_D6_Direction as sbit at DDc6_bit
dim LCD_D7_Direction as sbit at DDc7_bit

' Software I2C connections
dim Soft_I2C_Scl_Output    as sbit at PORTC0_bit
    Soft_I2C_Sda_Output    as sbit at PORTC1_bit
    Soft_I2C_Scl_Input     as sbit at PINC0_bit
    Soft_I2C_Sda_Input     as sbit at PINC1_bit
    Soft_I2C_Scl_Direction as sbit at DDC0_bit
    Soft_I2C_Sda_Direction as sbit at DDC1_bit
' End Software I2C connections
' Relay arraye
'structure On_arrayx
dim on_a_0 as Byte[7][4][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
dim on_a_1 as Byte[7][4][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'dim on_a_1 as integer[7][4][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'dim on_a_0 as byte[7][1][3][2][4]  '' on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0]
 dim st as string[4]
 dim output as integer
'dim on_a as byte[7][5][7][4]
'    Week as byte[7][5]
'    Hour as byte[7][5]
'    minut as byte[7][5]
'end structure
'structure off_arrayx
'dim off_a as byte[7][5][2]
'    Week as byte[7][5]
'    Hour as byte[7][5]
'    minut as byte[7][5]
'end structure

' Lcd constants
dim txt11,txt22 as string [2]
    txt33,txt_ch as string[1]
     txt_pwm1,txt_pwm2,txt_pwm3,txt_pwm4,txt_pwm5,txt_Pwm6,txt_pwm7,txt_pwm8,txt_pwm9 as string [3]
dim txt,txt3 ,txt1 as string[19]

    txt2 as string[16]
'    txt3 as string[5]
'    txt4 as string[5]
    text_1  as string[16]
  ' RTC Definitions
const RTC_ADDR = 0xD0


Dim EEprom_data_read As byte
const write_address_bus = 160 ' or 0XA0
const read_address_bus = 161  ' or 0XA0


'###################timer #################
Dim _ss as integer volatile data
Dim _zz as word volatile data
dim anz as string[10]
dim freq as longword
ztmp as integer
korrekturfaktor as float
_count as integer
_a as integer
''############# end of timer ##############
 '################### Shamsi to Mlady #####################
   dim miladiYear as integer
   dim miladiDate_iMonth,miladiDate_iYear,miladiDate_iDay as integer
 '################### Shamsi #####################
' dim uart_rd,counter,error_,receive,error,error1,data1 ,error2_,clk as byte
'dim cnt,hour1 as integer          ' Global variable cnt
Dim N2, Conter2 As Byte
Dim Year2 As Word
Dim Sec1 As Byte
Dim Jmonth_a As Byte[12]
Dim Gmonth_a As Byte[12]
Dim Gyear As Integer                                        'input gregorian(miladi) year
Dim Gday As Integer                                         'input gregorian day
Dim Gmonth As Integer
Dim Jday As Integer                                         'Output jalali(shamsi) day
Dim Jmonth As Integer                                       'Output Jalali month
Dim Jyear As Integer
Dim Gdayofyear As Integer
Dim Gyear_ As Integer                                       'Output Jalali year
Dim Jdayofyear As Integer
Dim Gnumdayofyear As Integer
Dim Isleapyear As Bit
Dim Isleapyearp As Bit
Dim Iloop As Byte
Dim Temp1 As Integer
Dim Temp2 As Integer                                        '***************** set hiter***** led *********
Dim Temp3 As Integer
Dim Temp4 As Integer



dim stringLength,temp,numberLength,j,ex , i as integer
      tempCh as char
''################# LCD Initial #################

sub procedure Lcd_0()
              Lcd_Init()
              Lcd_Cmd(_LCD_CLEAR)               ' Clear display
              Lcd_Cmd(_LCD_CURSOR_OFF)          ' Cursor off

end sub




'################# timer pwm ####################
''    https://www.mikroe.com/forum/viewtopic.php?f=72&t=29914

 Sub procedure pwm_set_1B(dim pulse_width as  char )

OCR1BL = pulse_width ''  //Load Pulse width
OCR1AL = pulse_width ''  //Load Pulse width
OCR0 = pulse_width
OCR2 = pulse_width
'/*start timer:
'without presscaler
'Non inverted mode in OC2 pin;
'phase corect PWM*/
TCCR0 = (1<<FOC2)or (1<<COM21)or(1<<COM20) or(1<<WGM20) or (1<<CS00)
TCCR1A  = (1<<FOC2)or(1<<COM21)or(1<<COM20)or (1<<WGM20)or(1<<CS00)
TCCR2 = (1<<FOC2)or(1<<COM21)or(1<<COM20)or(1<<WGM20) or(1<<CS00)
'//Start PWM
TCCR1B = 1<<CS10
end sub

Sub procedure Timer2_Compare iv IVT_ADDR_TIMER2_COMP 'L?st aus alle (8Mhz/1024/125) 16ms
inc(_ss)
End sub

sub procedure Timer0_overflow iv IVT_ADDR_TIMER0_OVF
inc(_zz)
TIFR.TOV0=0
portf0_bit=not Portf0_bit
end sub

sub procedure SetRegister()
'TCCR0B.B0=1'' //CS00 --->Clock Select--->No Prescaling
'TCCR0B.B1=0 ''//CS01
'TCCR0B.B2=0 ''//CS02


'/*
'//FOC0 WGM00 COM01 COM00 WGM01 CS02 CS01 CS00 = TCCR0
'TCCR0 = 0b01111001
'*/
TCCR2.WGM21=1 'CTC Mode Aktivierung Timer2
TCCR2.COM20=1 'set OCR Flag bei "Compare Match"
TCCR2.COM21=1 'set OCR Flag bei "Compare Match"
'TCCR2 = TCCR2 or 00111000
TCCR0.CS02=1 'Ext Flanke Interrupt (T0)
TCCR0.CS01=1
TCCR0.CS00=1
'TCCR0 = TCCR0 or 00000111
TCCR2.CS22=1 'Set Prescaler Timer2 1024 setzen
TCCR2.CS21=1
TCCR2.CS20=1
'TCCR2 = TCCR2 or 00000111
OCR2=124 'Set Output Compare register Timer2 to 124 (for Loop 0-124 => 125)
TIMSK.OCIE2=1 ' Enable comp match flag interrupt Timer 2
TIMSK.TOIE0=1 ' Enable OV flag interrupt Timer 0
SREG.SREG_I=1
End Sub
  ''################# SetPWM0 Initial #################
'  www.extremeelectronics.co.in/avr-tutorials/pwm-signal-generation-by-using-avr-timers-part-ii/
sub procedure SetPWM0(dim duty as integer)
'   TCCR0|=(1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00)
'   TCCR0 = (1<<FOC2)or (1<<COM21)or(1<<COM20) or(1<<WGM20) or (1<<CS00)
   OCR0=duty
end sub

sub procedure strToInt1()
'  dim stringLength,temp,numberLength,j,ex , i as integer
'      tempCh as char
      output = 0  ex=0
      i = 1  stringLength = strlen(st)  temp = 0   numberLength = 0

  for j = 0 to stringLength-1
'   inc(j)
   tempCh = st[j]
   temp = tempCh - 48
   if   tempCh =46 then
      ex=1
   end if
       if (temp >= 0) and ( temp <= 9) and (ex=0)  then

                 inc(numberLength)
       end if
   next j


   for j = 0 to numberLength-1
'     inc(j)
     tempCh = st[j]
     temp = tempCh - 48
     if (temp >= 0) and (temp <= 9)  then

        output =output +  temp * pow(10, (numberLength-i))
        i=i+1

     end if
   next j

end sub
 sub procedure PWM_MAKE_as_max(dim jj as byte,dim max_duty as integer)
 dim  ii as integer
      jjyear as float
'        jjyear=jj
      jjyear=ceil((jj*max_duty)/100)
      FloatToStr(jjyear, st)
'      st[3]=(jjyear div 1000)  + 48
'       st[2]=((jjyear mod 1000)div 100)  + 48
'       st[1]= (((jjyear mod 1000)mod 100) div 10)  + 48
'       st[0]= ((((jjyear mod 1000)mod 100) mod 10) div 1) + 48
       Lcd_0()
'         ii = StrToInt(st)
         strToInt1()
         ii =output
         IntToStr(ii, txt)
     Lcd_Out(1,1,st)
     Lcd_Out(2,1,txt)
     Delay_mS(1000)
  end sub
 sub procedure PWM_MAKE(dim jj as byte,dim max_duty as integer,dim Pwm_chanel_make as byte)
'      dim st as string[4]
      dim  ii as integer
        jjyear as float
'        jjyear=jj
      jjyear=ceil((jj*max_duty)/100)
      FloatToStr(jjyear, st)
'      st[3]=(jjyear div 1000)  + 48
'       st[2]=((jjyear mod 1000)div 100)  + 48
'       st[1]= (((jjyear mod 1000)mod 100) div 10)  + 48
'       st[0]= ((((jjyear mod 1000)mod 100) mod 10) div 1) + 48
       Lcd_0()
'         ii = StrToInt(st)
         strToInt1()
         ii =output
         IntToStr(ii, txt)
     Lcd_Out(1,1,st)
     Lcd_Out(2,6,txt)
     IntToStr(jj, txt)
     Lcd_Out(2,1,txt)

'     Delay_mS(100)
     select case Pwm_chanel_make
     case 1
'     jj=floor((jj*1024)/100)
'           PWM_MAKE_as_max(jj,1024) ii=output
          PWM16bit_Change_Duty(ii, _TIMER1_CH_A )
     case 2

'          jj=ceil((jj*1024)/100)
          PWM16bit_Change_Duty( ii, _TIMER1_CH_B )
     case 3
'     PWM_MAKE_as_max(jj,512) ii=output
'     jj=floor((jj*255)/100)
          if ii=0 then
             SetPWM0(max_duty-ii)
           else
                SetPWM0(max_duty-ii)
'                PWM1_Set_Duty(ii)
           end if

     case 4
'     PWM_MAKE_as_max(jj,512) ii=output
'     jj=floor((jj*255)/100)
'          PWM2_Set_Duty(ii)
          PWM16bit_Change_Duty( ii, _TIMER1_CH_C )
     case 5
'     PWM_MAKE_as_max(jj,512) ii=output
'     jj=floor((jj*255)/100)
          PWM16bit_Change_Duty(ii, _TIMER3_CH_A )
     case 6
'     PWM_MAKE_as_max(jj,512) ii=output
'     jj=floor((jj*255)/100)
          PWM16bit_Change_Duty(ii, _TIMER3_CH_B )
     case 7
'     PWM_MAKE_as_max(jj,512) ii=output
'     jj=floor((jj*255)/100)
          PWM16bit_Change_Duty(ii, _TIMER3_CH_C )
     end select
 end sub

 '{**************************************************************************************************
'* Write time to RTC DS1307
'* input : variables with RTC data
'**************************************************************************************************}
sub procedure Write_Time(dim c_hours as byte, dim c_minutes as byte, dim c_seconds as byte,
               dim c_day as byte, dim c_week as byte, dim c_month as byte, dim c_year as byte)
   Soft_I2C_Start()                         ' issue start signal
   Soft_I2C_Write(RTC_ADDR)                 ' address DS1307
   Soft_I2C_Write(0)                        ' start from word at address (REG0)
   Soft_I2C_Write(0x80)                     ' write $80 to REG0. (pause counter + 0 sec)   ?? ??????? ????? ????? ?????

   Soft_I2C_Write(c_minutes)                ' write 0 to minutes word to (REG1)
   Soft_I2C_Write(c_hours)                  ' write 17 to hours word (24-hours mode)(REG2)
   Soft_I2C_Write(c_week)                   ' write 2 - Monday (REG3)
   Soft_I2C_Write(c_day)                    ' write 4 to date word (REG4)
   Soft_I2C_Write(c_month)                  ' write 5 (May) to month word (REG5)
   Soft_I2C_Write(c_year)                   ' write 01 to year word (REG6)
   Soft_I2C_Stop()                          ' issue stop signal

   Soft_I2C_Start()                         ' issue start signal
   Soft_I2C_Write(RTC_ADDR)                 ' address DS1307
   Soft_I2C_Write(0)                        ' start from word at address 0
   Soft_I2C_Write(0 and c_seconds)          ' write 0 to REG0 (enable counting + 0 sec)       ???? ??? ? ?????
   Soft_I2C_Stop()                          ' issue stop signal
end sub
 '**************************************************************************************************
'* Read_time
'**************************************************************************************************}
 '-------------------- Formats date and time
 sub procedure Read_Time(dim p_hours as ^byte, dim p_minutes as ^byte, dim p_seconds as ^byte,
              dim p_day as ^byte, dim p_week as ^byte, dim p_month as ^byte, dim p_year as ^byte)

  Soft_I2C_Start()                    ' Issue start signal
  Soft_I2C_Write(RTC_ADDR)            ' Address DS1307, see DS1307 datasheet
  Soft_I2C_Write(0)                   ' Start from address 0
  Soft_I2C_Start()                    ' Issue repeated start signal
  Soft_I2C_Write(RTC_ADDR + 1)        ' Address DS1307 for reading R/W=1

  p_seconds^ = Soft_I2C_Read(1)      ' Read seconds byte
  p_minutes^ = Soft_I2C_Read(1)      ' Read minutes byte
  p_hours^ = Soft_I2C_Read(1)        ' Read hours byte
  p_week^ = Soft_I2C_Read(1)
  p_day^ = Soft_I2C_Read(1)
  p_month^ = Soft_I2C_Read(1)
  p_year^ = Soft_I2C_Read(0)

  Soft_I2C_Stop()   ' Issue stop signal
end sub

 '{**************************************************************************************************
'* Write time to EEprom
'* input : variables with EEPROM data
'**************************************************************************************************}
sub procedure Write_EEprom(dim data1 as byte,dim address as integer)
   dim hi_,Lo_ as byte
       error as byte

   hi_=hi(address)
   lo_=lo(address)
   Soft_I2C_Start()                         ' issue start signal
   Soft_I2C_Write(write_address_bus)                 ' address 160
   Soft_I2C_Write(hi_)                        ' start from word at address (REG0)
   Soft_I2C_Write(lo_)                     ' write $80 to REG0. (pause counter + 0 sec)   ?? ??????? ????? ????? ?????

   error=Soft_I2C_Write(data1)                ' write 0 to minutes word to (REG1)
'   Lcd_Init()
'   Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'   Lcd_Cmd(_LCD_CURSOR_OFF)
'   if error=1 then
'   lcd_out(1,1,"error in writing")
'   else
'   lcd_out (1,1,"no error")
'   end if
'   delay_ms(100)
   Soft_I2C_Stop()                          ' issue stop signal
   delay_ms(10)
end sub
 '**************************************************************************************************
'* Read_EEprom
'**************************************************************************************************}
 '-------------------- Formats date and time
 sub procedure Read_EEprom(dim address_1 as integer)
  dim hi_,Lo_ as byte
  dim  device_address as char
'   device_address = 0xA0
  Soft_I2C_Start()                    ' Issue start signal
  Soft_I2C_Write(write_address_bus)            ' Address DS1307, see 160 datasheet
'   Soft_I2C_Write(device_address+1)
  hi_=hi(address_1)
   lo_=lo(address_1)
  Soft_I2C_Write(hi_)                   ' Start from address 0
  Soft_I2C_Write(lo_)                   ' Start from address 0
  Soft_I2C_Start()                    ' Issue repeated start signal
  Soft_I2C_Write(read_address_bus)        ' Address 161 for reading R/W=1

  EEprom_data_read = Soft_I2C_Read(0)      ' Read seconds byte


  Soft_I2C_Stop()   ' Issue stop signal
end sub
sub procedure write_eeprom_ext_TWI(dim address_ as integer,dim  data_ as Byte)

 TWI_Init(10000)         ' initialize TWI communication
  TWI_Start()              ' issue TWI start signal
  TWI_Write(write_address_bus)          ' send byte via TWI (device address + W)
  TWI_Write(address_)             ' send byte (address of EEPROM location)
  TWI_Write(data_)          ' send data (data to be written)
  TWI_Stop()               ' issue TWI stop signal

  Delay_ms(20)
end sub
sub procedure Read_eeprom_ext_TWI(dim address_ as integer)

 TWI_Init(10000)         ' initialize TWI communication
  TWI_Start()              ' issue TWI start signal
  TWI_Write(write_address_bus)          ' send byte via TWI (device address + W)
  TWI_Write(address_)             ' send byte (data address)
  TWI_Start()              ' issue TWI signal repeated start
  TWI_Write(read_address_bus)          ' send byte (device address + R)
  EEprom_data_read = TWI_Read(0)      ' read data (NO acknowledge)
'  IntToStr(EEprom_data_read, txt)
'  Lcd_0()
'  Lcd_Out(1,1,"EEprom TWI o " )
'  Lcd_Out(2,1,txt )
'  delay_ms(1500)
  TWI_Stop()
  Delay_ms(20)
end sub





sub procedure eeprom_call_back_ext()'dim on_a_0 as integer[7][2][7][2][4] )
dim on_off22 as integer
    counter as longword
'    hx1 as string[2]
'    txt_sub as string[4]
'    Lcd_0()
     counter=0
     for week =1 to 2
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1
         Read_EEprom(1+counter)
         on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0]=  EEprom_data_read
         Read_EEprom(2 + counter)
         on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][1]=  EEprom_data_read
         Read_EEprom(3 + counter)
         on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][2]=  EEprom_data_read
         Read_EEprom(4 + counter)
         on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][3]=  EEprom_data_read

          counter=counter+4
'      Delay_mS(1000)
       next on_off22
     next chanel
      next pwm_chanel
      next week
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub


sub procedure eeprom_save_ext()'dim on_a_0 as integer[7][2][7][2][4] )
dim counter,on_off22 as integer
'    hx1 as string[2]
'    txt_sub as string[4]
'    Lcd_0()
     counter=0
     for week =1 to 7
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1

         Write_EEprom(0x01 + counter,on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0] )
        Write_EEprom(0x01 + counter+1,on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][1] )
         Write_EEprom(0x01 + counter+2,on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][2] )
         Write_EEprom(0x01 + counter+3,on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][3] )
          counter=counter+4
'      Delay_mS(1000)
       next on_off22
     next chanel
      next pwm_chanel
      next week
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub
'**************************************************************************************************






sub procedure eeprom_call_back_ext_twi()'dim on_a_0 as integer[7][2][7][2][4] )
dim on_off22 as byte
    week_twi as byte
'    counter as word
'    hx1 as string[2]
'    txt_sub as string[4]
'      Lcd_0()
     counter=0
     for week_twi =2 to 2
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1
'          LongWordToStr(counter, txt)
'          Lcd_Out(1,1,"read counter: " )
'          Lcd_Out(2,7,txt )
'          delay_ms(4)

         Read_eeprom_ext_TWI(inc(counter))
'         Read_EEprom(0x01+counter)
         on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][0]=  EEprom_data_read
         Read_eeprom_ext_TWI(inc(counter))
         on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][1]=  EEprom_data_read
         Read_eeprom_ext_TWI(inc(counter))
         on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][2]=  EEprom_data_read
         Read_eeprom_ext_TWI(inc(counter))
         on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][3]=  EEprom_data_read

'          counter=counter+4
'      Delay_mS(1000)
       next on_off22
     next chanel
      next pwm_chanel
      next week_twi
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub


sub procedure eeprom_save_ext_twi()'dim on_a_0 as integer[7][2][7][2][4] )
dim on_off22 as byte
    week_twi as byte
'    counter as word
'    hx1 as string[2]
'    txt_sub as string[4]
'    Lcd_0()
     counter=0
'     Lcd_0()
     for week_twi =2 to 2
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1
'          LongWordToStr(counter, txt)
'          Lcd_Out(1,1,"write counter: " )
'          Lcd_Out(2,7,txt )
'          delay_ms(4)

         write_eeprom_ext_TWI(inc(counter),on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][0] )
        write_eeprom_ext_TWI(inc(counter),on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][1] )
         write_eeprom_ext_TWI(inc(counter),on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][2] )
         write_eeprom_ext_TWI(inc(counter),on_a_0 [week_twi-1][chanel-1][pwm_chanel-1][on_off22-1][3] )
'          counter=counter+4
'      Delay_mS(1000)
       next on_off22
     next chanel
      next pwm_chanel
      next week_twi
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub
'**************************************************************************************************

sub procedure eeprom_ext_TWI_ini()
  EEprom_data_read=0  Lcd_0()
  Read_eeprom_ext_TWI(0x00)
   if  EEprom_data_read=111 then
   lcd_out(1,1,"Ext TWI EEp wr beffor")
   delay_ms(1000)
   else
   write_eeprom_ext_TWI(0x00,111)
   lcd_out(1,1,"Ext TWI EEp not wrted")
   lcd_out(2,1,"Wrtting ext twi eep")
   delay_ms(1000)
   end if
   EEprom_data_read=0 Lcd_0()
  Read_eeprom_ext_TWI(0x00)
   if  EEprom_data_read=111 then
   lcd_out(1,1,"Ext TWI EEp working")
   delay_ms(100)
   byteToStr(EEprom_data_read, txt)
   Lcd_0()
   Lcd_Out(1,1,"EEprom TWI o " )
   Lcd_Out(2,1,txt )
   delay_ms(1000)
   else
'   write_eeprom_ext_TWI(0x00,111)
   lcd_out(1,1,"TWI EEp not working")
'   lcd_out(2,1,"Wrtting ext twi eep")
   delay_ms(1000)
   end if
   Lcd_0()
end sub


sub procedure eeprom_call_back()'dim on_a_0 as integer[7][2][7][2][4] )
dim on_off22 as integer
    week_int as byte
'    hx1 as string[2]
'    txt_sub as string[4]
'    Lcd_0()
     counter=0
     for week_int =1 to 7
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1
         on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][0]=  EEPROM_read(0x01 + counter)
         on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][1]=  EEPROM_read(0x02 + counter)
         on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][2]=  EEPROM_read(0x03 + counter)
         on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][3]=  EEPROM_read(0x04 + counter)

          counter=counter+4
'      Delay_mS(1000)
       next on_off2
     next chanel
      next pwm_chanel
      next week_int
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub


sub procedure eeprom_save()'dim on_a_0 as integer[7][2][7][2][4] )
dim on_off22 as integer
    week_int as byte
'    hx1 as string[2]
'    txt_sub as string[4]
'    Lcd_0()
     counter=0
     for week_int =1 to 7
     for Pwm_chanel=1 to 7
     for chanel =1 to 4
     for on_off22=1 to 2
'     counter=counter+1

         EEPROM_Write(0x01 + counter,on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][0] )
        EEPROM_Write(0x01 + counter+1,on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][1] )
         EEPROM_Write(0x01 + counter+2,on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][2] )
         EEPROM_Write(0x01 + counter+3,on_a_0 [week_int-1][chanel-1][pwm_chanel-1][on_off22-1][3] )
          counter=counter+4
'      Delay_mS(1000)
       next on_off2
     next chanel
      next pwm_chanel
      next week_int
'  EEPROM_Write(0x100 ,  hours) EEPROM_Write(0x101 , minutes) EEPROM_Write(0x102 ,  seconds)
'  EEPROM_Write(0x103 ,  day) EEPROM_Write(0x104 ,  week) EEPROM_Write(0x105 ,  month) EEPROM_Write(0x106 ,  year )
'  dim hours, minutes, seconds, day, week, month, year as byte

 end sub
  '**************************************************************************************************
'* Shamsi_transfer_time
'**************************************************************************************************}
 '-------------------- Formats date and time
sub procedure Shamsi_transfer_time()

   seconds  =  ((seconds and 0x70) >> 4)*10 + (seconds and 0x0F)
  minutes  =  ((minutes and 0xF0) >> 4)*10 + (minutes and 0x0F)
  hours    =  ((hours and 0x30) >> 4)*10 + (hours and 0x0F)
  week     =  (week and 0x07)
  day      =  ((day and 0xF0) >> 4)*10 + (day and 0x0F)
  month    =  ((month and 0x10) >> 4)*10 + (month and 0x0F)
  year     =  ((year and 0xF0) >> 4)*10+(year and 0x0F)
end sub

sub procedure Shamsi_show_lcd(dim jjmonth,jjday,jjyear,jweek,jhours ,jminutes,jseconds as integer)
  select case jweek
     case 2
      txt = "Sun"
     case 3
      txt = "Mon"
     case 4
      txt = "Tue"
     case 5
      txt = "Wed"
     case 6
      txt = "Thu"
     case 7
      txt = "Fri"
     case 1
      txt = "Sat"
  end select

  LCD_Out(1,1, txt)
  Lcd_Chr(1, 6, (jjday div 10)   + 48)    ' Print tens digit of day variable
  Lcd_Chr(1, 7, (jjday mod 10)   + 48)    ' Print oness digit of day variable
  Lcd_Chr(1, 9, (jjmonth div 10) + 48)
  Lcd_Chr(1,10, (jjmonth mod 10) + 48)
'  Lcd_Chr(1,14, txt)
  Lcd_Chr(1,12, (jjyear div 1000)  + 48)
  Lcd_Chr(1,13, ((jjyear mod 1000)div 100)  + 48)
  Lcd_Chr(1,14, (((jjyear mod 1000)mod 100) div 10)  + 48)
  Lcd_Chr(1,15, (((jjyear mod 1000)mod 100) mod 10)  + 48)

  Lcd_Chr(2, 6, (jhours div 10)   + 48)
  Lcd_Chr(2, 7, (jhours mod 10)   + 48)
  Lcd_Chr(2, 9, (jminutes div 10) + 48)
  Lcd_Chr(2,10, (jminutes mod 10) + 48)
  Lcd_Chr(2,12, (jseconds div 10) + 48)
  Lcd_Chr(2,13, (jseconds mod 10) + 48)

end sub
    '* ???????? ?????? ?? ????
'* input : variables with RTC data
'**************************************************************************************************}
sub procedure shamsi_to_milady(dim ShamsiMonth, ShamsiDay, ShamsiYear as integer)
' Declare a constant array which holds number of days in each month:
'const Gmonth_a as byte[12] = (31,28,31,30,31,30,31,31,30,31,30,31)
dim miladiYear2,miladiYear,marchDayDiff,Temp5, remainDay as integer
dim farvardin1st_iMonth,farvardin1st_iDay,dayCount,i as integer
'dim miladiDate_iMonth,miladiDate_iDay,miladiDate_iYear  as integer
Dim Mmonth_a As Byte[12]
structure farvardin1st_2
  dim iMonth,iDay as integer
end structure
'const Mmonth_a as byte[12]   =  (30,31,30,31,31,30,31,30,31,31,28,31)
       Mmonth_a[0] = 30
       Mmonth_a[1] = 31
       Mmonth_a[2] = 30
       Mmonth_a[3] = 31
       Mmonth_a[4] = 31
       Mmonth_a[5] = 30
       Mmonth_a[6] = 31
       Mmonth_a[7] = 30
       Mmonth_a[8] = 31
       Mmonth_a[9] = 31
       Mmonth_a[10] = 28
       Mmonth_a[11] = 31

      miladiYear = ShamsiYear + 621
      miladiYear2=miladiYear
      Temp1 = miladiYear2 Mod 4
      Temp2 = miladiYear2 Mod 100
      Temp3 = miladiYear2 Mod 400
      Temp4 = (( Temp2 <> 0) and ( Temp1 = 0) )
      Temp5=((Temp2 = 0) and (Temp3 = 0) )
'      if(((((miladiYear mod  100)<> 0) and ((miladiYear mod 4) = 0))) or ((((miladiYear mod 100)= 0) and (miladiYear mod 400) = 0))) then
      if(Temp4 or temp5) then

'      If (Temp4 <> 0 ) or Temp3 = 0    Then
        farvardin1st_iMonth = 3
        farvardin1st_iDay = 20
        marchDayDiff = 12
      Else
         farvardin1st_iMonth = 3
         farvardin1st_iDay =21
         marchDayDiff = 11
      End If
      if(((((miladiYear+1 mod  100)<> 0) and ((miladiYear+1 mod 4) = 0))) or ((((miladiYear+1 mod 100)= 0) and (miladiYear+1 mod 400) = 0))) then

         Mmonth_a[10] = Mmonth_a[10] + 1 '//Adding one day to Feb
       end if

       if((ShamsiMonth>=1)and( ShamsiMonth<=6))   then
           dayCount = ((ShamsiMonth-1) * 31) + ShamsiDay
       else
           dayCount =(6 * 31) + ((ShamsiMonth - 7) * 30) + ShamsiDay
       end if
       if (dayCount <= marchDayDiff) then '//So we are in 20(for leap year) or 21for none leap year) to 31 march

          miladiDate_iDay = dayCount + (31 - marchDayDiff)
          miladiDate_iMonth = 3
          miladiDate_iYear=miladiYear

      else
          remainDay = dayCount - marchDayDiff
      end if
       i = 0  ' //starting from April

       while ((remainDay > Mmonth_a[i]))

             remainDay = remainDay - Mmonth_a[i]
             i=i+1

       wend
      miladiDate_iDay = remainDay

      if (i > 8)  then '// We are in the next Miladi Year

         miladiDate_iMonth = i - 8
         miladiDate_iYear =  miladiYear + 1

     else

         miladiDate_iMonth = i + 4
         miladiDate_iYear =  miladiYear
     end if


end sub
   '* ???????? ?????? ?? ????
'* input : variables with RTC data
'**************************************************************************************************}
sub procedure shamsi()
' Declare a constant array which holds number of days in each month:
'const Gmonth_a as byte[12] = (31,28,31,30,31,30,31,31,30,31,30,31)

  Gmonth_a[0] = 31
  Gmonth_a[1] = 28
  Gmonth_a[2] = 31
  Gmonth_a[3] = 30
  Gmonth_a[4] = 31
  Gmonth_a[5] = 30
  Gmonth_a[6] = 31
  Gmonth_a[7] = 31
  Gmonth_a[8] = 30
  Gmonth_a[9] = 31
  Gmonth_a[10] = 30
  Gmonth_a[11] = 31
  Gnumdayofyear = 365
  Gdayofyear = 0
  Temp1 = Gyear Mod 4
  Temp2 = Gyear Mod 100
  Temp3 = Gyear Mod 400
  Temp4 = Temp1 And Temp2
  If (Temp4 <> 0) Or (Temp3 = 0) Then
'  If (Temp4 = 0 ) and (Temp3 <> 0)    Then
    Gmonth_a[1] = 28
  Else
      Gmonth_a[1] = 29
  End If


  Gyear_ = Gyear - 1
  Temp1 = Gyear_ Mod 4
  Temp2 = Gyear_ Mod 100
  Temp3 = Gyear_ Mod 400
  Temp4 = Temp1 And Temp2
  If (Temp4 <> 0) Or (Temp3 = 0) Then
      Isleapyearp =0
  Else
      Isleapyearp=1
  End If
  Temp1 = Gmonth - 1
  For Iloop = 1 To Temp1
      Gdayofyear = Gmonth_a[iloop-1] + Gdayofyear
  Next   Iloop
      Gdayofyear = Gday + Gdayofyear
  If Gdayofyear > 79 Then
                Temp1 = Gdayofyear - 79
                Jyear = Gyear - 621
                If Temp1 < 186 Then
                   Temp2 = Temp1 Mod 31
                   Temp3 = Temp1 / 31
                   If Temp2 = 0 Then
                      Jmonth = Temp3
                      Jday = 31
                   Else
                       Jmonth = Temp3 + 1
                       Jday = Temp2
                   End If
                Else
                    Temp2 = Temp1 - 186
                    Temp3 = Temp2 Mod 30
                    Temp4 = Temp2 / 30
                    If Temp3 = 0 Then
                       Jmonth = Temp4 + 6
                       Jday = 30
                    Else
                        Jmonth = Temp4 + 7
                        Jday = Temp3
                    End If
                End If
   Else
       Jyear = Gyear - 622
       If Isleapyearp  Then
          Gdayofyear = Gdayofyear + 11
       Else
          Gdayofyear = Gdayofyear + 10
       End If
       Temp2 = Gdayofyear Mod 30
       Temp3 = Gdayofyear / 30
       If Temp2 = 0 Then
          Jmonth = Temp3 + 9
          Jday = 30
       Else
           Jmonth = Temp3 + 10
           Jday = Temp2
       End If
       Delay_ms(1)
  End If

end sub
sub procedure miladi_call(dim jjmonth,jjday,jjyear,jweek,jhours ,jminutes,jseconds as integer)

'  Lcd_Init()                        ' Initialize Lcd
  Lcd_0()
  shamsi_to_milady( jjmonth, jjday, jJyear )
  select case jweek
     case 2
      txt = "Sun"
     case 3
      txt = "Mon"
     case 4
      txt = "Tue"
     case 5
      txt = "Wed"
     case 6
      txt = "Thu"
     case 7
      txt = "Fri"
     case 1
      txt = "Sat"
  end select

  LCD_Out(1,1, txt)
  Lcd_Chr(1, 6, (miladiDate_iDay div 10)   + 48)    ' Print tens digit of day variable
  Lcd_Chr(1, 7, (miladiDate_iDay mod 10)   + 48)    ' Print oness digit of day variable
  Lcd_Chr(1, 9, (miladiDate_iMonth div 10) + 48)
  Lcd_Chr(1,10, (miladiDate_iMonth mod 10) + 48)
  Lcd_Chr(1,12, (miladiDate_iYear div 1000)  + 48)
  Lcd_Chr(1,13, ((miladiDate_iYear mod 1000)div 100)  + 48)
  Lcd_Chr(1,14, (((miladiDate_iYear mod 1000)mod 100) div 10)  + 48)
  Lcd_Chr(1,15, (((miladiDate_iYear mod 1000)mod 100) mod 10)  + 48)

  Lcd_Chr(2, 6, (jhours div 10)   + 48)
  Lcd_Chr(2, 7, (jhours mod 10)   + 48)
  Lcd_Chr(2, 9, (jminutes div 10) + 48)
  Lcd_Chr(2,10, (jminutes mod 10) + 48)
  Lcd_Chr(2,12, (jseconds div 10) + 48)
  Lcd_Chr(2,13, (jseconds mod 10) + 48)

  Delay_mS(1000)
end sub
'**************************************************************************************************
'* Call Shamsi
'**************************************************************************************************}
  sub procedure Shamsi_call()
'      Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)

     Shamsi_transfer_time()

      Gyear =  Year+2000
      Gday = Day
      Gmonth = Month
'
     shamsi()

'     Day = Jday
'     Year2 = Jyear
'     Jyear=jyear -1300
'     Month = Jmonth
     Lcd_Cmd(_LCD_CLEAR)               ' Prepare and output static text on LCD
'     ByteToStr(Year2, txt)
'     IntToStr(Jyear, txt)
'     Display_Time()
     ''Shamsi_show_lcd( jmonth,jday,jyear,week,hours ,minutes,seconds )

   ''Delay_mS(1000)

   ''miladi_call(jmonth,jday,jyear,week,hours ,minutes,seconds )
  end sub

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_on_off(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min

          LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          else
             var_in=var_in+1
             LCD_Out(2,9, "Off setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
              LCD_Out(2,9, "Off setting")  ''Show on LCD
          LCD_Out(2,1, "Value : ")  ''Show on LCD
          Delay_mS(100)
          else
             var_in=var_in-1
             LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value : ")  ''Show on LCD
          Delay_mS(100)
          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
'           Lcd_0()
'           LCD_Out(2,1, "Exit No save !!! ")  ''Show on LCD
'           Delay_mS(100)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           if (var_in=p_min) then
              var_in=p_max
              LCD_Out(2,9, "Off ")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          else
'             var_in=var_in-1
             LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_week_day_teben(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
         select case var_in
              case 1
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Please Chose Day:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           LCD_Out(1,1, "Day ")  ''Show on LCD
           inttostr(var_in,txt)
           LCD_Out(1,6, txt)  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
          k_set=k_set+1
          if k_set=K_set_max then
                    k_set=1
          end if
           Lcd_0()
           LCD_Out(1,1, "Day ")  ''Show on LCD
           inttostr(var_in,txt)
           LCD_Out(1,6, txt)  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_off_teben(dim week_day,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "v1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           if var_in=2 then
           LCD_Out(1,1, "Off time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
            k_set=k_set+1
            if k_set=K_set_max then
                    k_set=1
            end if
           if var_in=2 then
           LCD_Out(1,1, "Off time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************

'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_Yes_No_teben(dim week_day,chanel_1,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
    Lcd_0()

     bytetostr(chanel,txt33)

'                    delay_ms(1111)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                   LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Yes|No Chanel:")  LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Dy:Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0

           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set-2
           on_off2=1  ''on mode
           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
'           chanel=chanel_1+1
           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set-2

           on_off2=1  ''on mode
           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************


    '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_minut_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
dim txt_ch22 as string [2]
    while_state_import=1
    oldstate_2=0
    Lcd_0()

'                        ByteToStr(var_in,txt11)
'                    ByteToStr(var_in2,txt22)

'                    LCD_Out(1,5,txt11) LCD_Out(1,8,txt22)LCD_Out(1,8,":")
'                     LCD_Out(2,1, "1 2 3 4 5 6 7")  ''Show on LCD
'                     Delay_mS(1100)

'                    txt22="  "

'                     LCD_Out(1,5,"   ") LCD_Out(1,8,txt22) LCD_Out(1,8,":")
'                    LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
'                    Delay_mS(1100)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
        ByteToStr(var_in,txt11)
        ByteToStr(var_in2,txt22)
        Bytetostr(chanel,txt_ch22)
      if 1=1 then
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                      LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in2>=p_max) then
              var_in2=p_min
          else
             var_in2=var_in2+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in2<=p_min) then
              var_in2=p_max
          else
             var_in2=var_in2-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()

            LCD_Out(1,1, "On time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)
        end if
    var_in_global= var_in2
  wend
 end sub
'**************************************************************************************************
     '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_off_minut_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
dim txt_ch22 as string [2]
    while_state_import=1
    oldstate_2=0
   Lcd_0()


'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      ByteToStr(var_in,txt11)
      ByteToStr(var_in2,txt22)
      Bytetostr(chanel,txt_ch22)
      if 1=1 then
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")

                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                   LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, ":Dy1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                   LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in2>=p_max) then
              var_in2=p_min
          else
             var_in2=var_in2+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in2<=p_min) then
              var_in2=p_max
          else
             var_in2=var_in2-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()

            LCD_Out(1,1, "Off time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Off time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)
        end if
    var_in_global= var_in2
  wend
 end sub
'**************************************************************************************************

 '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_hour_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
'dim txt11,txt22 as string [2]
   dim  txt_ch2 as string[2]
    while_state_import=1
    oldstate_2=0
   Lcd_0()
'     LCD_Out(1,5,txt_ch2)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )

      if 1=1 then
         ByteToStr(var_in,txt11)
         ByteToStr(var_in2,txt22)
         ByteToStr(chanel,txt_ch2)
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,4,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in>=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in<=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
'                   k_set=k_set+1
'                   if k_set=K_set_max then
'                    k_set=1
'                   end if
           Lcd_0()

'            LCD_Out(1,1, "On time is ")  ''Show on LCD
'           bytetostr(var_in,txt11)
'           bytetostr(var_in2,txt22)
'           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
'           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()

'            LCD_Out(1,1, "On time is ")  ''Show on LCD
'           bytetostr(var_in,txt11)
'           bytetostr(var_in2,txt22)
'          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
'           Delay_mS(500)
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
 '* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_PWM_Red_teben(dim mode_1,Pwm_chanel_red,var_in as byte, dim p_max as  byte, dim p_min as  byte,dim pwm1,pwm2,pwm3,pwm4,pwm5,pwm6,pwm7,pwm8,pwm9 as byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    dim  Pwm_1 as byte
'          txt_Pwm1,txt_pwm2,txt_pwm3,txt_pwm4 , txt_pwm5,txt_Pwm6,txt_pwm7 as string [2]
    while_state_import=1
    oldstate_2=0
    Lcd_0()

'     bytetostr(chanel,txt33)

'                    delay_ms(1111)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import and while_state_import_main )

         ByteToStr(var_in,txt11)
         ByteToStr(pwm1,txt_pwm1)
         ByteToStr(pwm2,txt_pwm2)
         ByteToStr(pwm3,txt_pwm3)
         ByteToStr(pwm4,txt_pwm4)
         ByteToStr(pwm5,txt_pwm5)
         ByteToStr(pwm6,txt_pwm6)
         ByteToStr(pwm7,txt_pwm7)
         ByteToStr(pwm8,txt_pwm8)
         ByteToStr(pwm9,txt_pwm9)
         select case  mode_1
         case 1
             ByteToStr(var_in,txt_pwm1)
         case 2
             ByteToStr(var_in,txt_pwm2)
          case 3
             ByteToStr(var_in,txt_pwm3)
          case 4
             ByteToStr(var_in,txt_pwm4)
         case 5
             ByteToStr(var_in,txt_pwm5)
         case 6
             ByteToStr(var_in,txt_pwm6)
         case 7
             ByteToStr(var_in,txt_pwm7)
         end select
         select case Pwm_chanel_red
              case 1
'              txt_pwm3="0"
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Red:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)


             case 0
                LCD_Out(1,1, "Red:") LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11)  ''lcd_out(1,8," -- -- --")
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
                    txt11="   "
                   LCD_Out(1,1, "Red:")   LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11) ''
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
              case 2
                       LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Grn:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 3
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Blu:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 4
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Wht:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 5
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Yel:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 6
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "DpB:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 7
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "UV :")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
         end select
         ByteToStr(var_in,txt11)
         ByteToStr(pwm1,txt_pwm1)
         ByteToStr(pwm2,txt_pwm2)
         ByteToStr(pwm3,txt_pwm3)
         ByteToStr(pwm4,txt_pwm4)
         ByteToStr(pwm5,txt_pwm5)
         ByteToStr(pwm6,txt_pwm6)
         ByteToStr(pwm7,txt_pwm7)
         ByteToStr(pwm8,txt_pwm8)
         ByteToStr(pwm9,txt_pwm9)
         select case  mode_1
         case 1
             txt_pwm1="   "
         case 2
             txt_pwm2="   "
          case 3
             txt_pwm3="   "
          case 4
             txt_pwm4="   "
         case 5
             txt_pwm5="   "
         case 6
             txt_pwm6="   "
         case 7
             txt_pwm7="   "
         end select




         select case Pwm_chanel_red


              case 1
'              txt_pwm3="0"

'                    txt_pwm1="  "
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Red:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
             case 0
                LCD_Out(1,1, "Red:") LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11)  ''lcd_out(1,8," -- -- --")
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
                    txt11="   "
                   LCD_Out(1,1, "Red:")   LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11) ''
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
              case 2
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Grn:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Blu:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Wht:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 5
                   LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Yel:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "DpB:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "UV :")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
         end select

'       end select
    if (Button(PORTD, 5, 0.1, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.1, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
           PWM_MAKE (var_in,255,Pwm_chanel_red)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.1, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.1, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'
           PWM_MAKE (var_in,255,Pwm_chanel_red)
    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0

           Lcd_0()
           if var_in=1 then  'yes is selected
'           k_set=k_set+1
           on_off2=1  ''on mode
'           mode_1=mode_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0

           Lcd_0()
           if var_in=1 then  'yes is selected
'           k_set=k_set-2
           on_off2=1  ''on mode
'           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************




'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_save_exit_teben(dim week_day,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "v1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           if var_in=1 then
           LCD_Out(1,1, "Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "No Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
            k_set=k_set+1
            if k_set=K_set_max then
                    k_set=1
            end if
           if var_in=1 then
           LCD_Out(1,1, "Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "No Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1
          end if
'          Lcd_0()
          inttostr(var_in,txt1)
          LCD_Out(2,9, txt1)  ''Show on LCD
          LCD_Out(2,5, "Value : ")  ''Show on LCD
          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1
          end if
'          Lcd_0()
          inttostr(var_in,txt1)
          LCD_Out(2,9, txt1)  ''Show on LCD
          LCD_Out(2,5, "Value : ")  ''Show on LCD
          Delay_mS(100)

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
'           Lcd_0()
'           LCD_Out(2,1, "Exit No save !!! ")  ''Show on LCD
'           Delay_mS(100)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
          inttostr(var_in_global,txt1)
                LCD_Out(2,11, txt1)  ''Show on LCD
                LCD_Out(2,5, "Value :")  ''Show on LCD
                Delay_mS(100)
        end if
    var_in_global= var_in
  wend
 end sub

   sub procedure Keypad_set__date_time_import_lcd(dim var_in, p_max , p_min as  integer  )

               Lcd_0()
'               LCD_Out(2,1, "month seting0")  ''Show on LCD
               k_set=94
               inttostr(k_set,txt)
                LCD_Out(2,2, txt)  ''Show on LCD
'               Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'               Shamsi_transfer_time()
'               IntToStr(var_in, txt)
               LCD_Out(2,1, text_1)  ''Show on LCD
               LCD_Out(2,8, "seting2")  ''Show on LCD
               Lcd_Chr(2, 3, 94)
               Delay_mS(100)
               Keypad_set__date_time_import(var_in,p_max,p_min)
'               month=var_in_global
'               var_in_global
'               year=year+ 1

               inttostr(var_in_global,txt)
                LCD_Out(2,2, txt)  ''Show on LCD
                Delay_mS(100)
                 'Write TIME    11  : 15  : 00  : 24.  tuesday april  2012
'                 Write_Time(0x11, 0x15, 0x00, 0x24, 0x03,   0x04, 0x12)'
'                  Delay_mS(3500)


                    Lcd_0()


                   inttostr(month,txt)
                   LCD_Out(1,2, "int2str")  ''Show on LCD
                   LCD_Out(1,6,text_1)  ''Show on LCD
                   LCD_Out(2,2, txt)  ''Show on LCD

'                   a = month
'                   year_new = Dec2Bcd(a) ' b equals 34
'                   Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'                   Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
'                   Delay_mS(500)
'               var_in_global
'               year=year+ 1

'              Keypad_set__date_time()
              k_set = 1  ' 1
  end sub

   '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_0()
    dim  txt1 as string[4]
    dim while_state_2,oldstate_2,oldstate_3,oldstate_menu as bit
    dim kp,ok,k_set,Ex as  integer
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()

        oldstate_2 = 0
        oldstate_3 = 0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  ex=0
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds
        while  (while_state_2 )
        LCD_Out(1,1, "while : ")  ''Show on LCD
        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=8  then
             k_set=1
          end if
          inttostr(k_set,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Position : ")  ''Show on LCD
                Delay_mS(100)
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 1
                  text_1="Year"
                  Keypad_set__date_time_import_lcd(year, 100 , 0  )
                  year   =var_in_global


            case 2
'
               text_1="Mounths"
                  Keypad_set__date_time_import_lcd(month,12 , 1  )
                  month   =var_in_global

            case 3

                  text_1="day"
                  Keypad_set__date_time_import_lcd(day,31 , 1  )
                  day   =var_in_global

            case 4

                  text_1="week"
                  Keypad_set__date_time_import_lcd(week,7 , 1  )
                  week   =var_in_global


            case 5

               text_1="hours"
                  Keypad_set__date_time_import_lcd(hours,23 , 0  )
                  hours   =var_in_global
            case 6
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(minutes,59 , 0  )
                  minutes   =var_in_global
            case 7
                text_1="<Exit>"
                  Keypad_set__date_time_import_lcd(ex,1 , 0  )
                  ex =var_in_global
                  if ex=1 then
                            while_state_2=0
                            Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                            Delay_mS(100)
                  end if
          end select

        end if                      ' Update flag

     wend
 end sub


'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2 as  byte
        ex as  integer
'        k_set as byte
     minutes_1, on_off22 as byte
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1=on_a_0
        oldstate_2 = 0
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
'          week=week_new
           text_1="Year"
           LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
           Keypad_set__date_time_import(year, 100 , 0  )
           year   =var_in_global

'           k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set>8  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
'
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
'                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

              case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select

'           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
  sub procedure Keypad_Relay_set__date_time_stack_overflow_teben()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex,ch,md as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
     chanel_conflict as bit
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1=on_a_0
        oldstate_2 = 0  Yes_no=2
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=1
        oldstate_menu = 0
        while_state_2=1
        k_set=1  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
'          week=week_new
           week_new=week

            Lcd_0()
'            LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
'            LCD_Out(2,1, "1 2 3 4 5 6 7")  ''Show on LCD
'            Delay_mS(500)
'            if (week_new=1) then
'
'            LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
'            LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
'               Delay_mS(500)
'
'          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
'             Keypad_set__date_time_import_week_day_teben(week_new,7 , 1  )
'            week_new=var_in_global
'
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)

         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()


'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
             case 1
             Keypad_set__date_time_import_week_day_teben(week_new,7 , 1  )
            week_new=var_in_global
            case 2
             on_off2=1   ''On mode
             Lcd_0()
             Keypad_set__date_time_import_On_off_teben(week_new,on_off2,2,1)
             on_off2= var_in_global
             LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


                 LCD_Out(2,9, "On setting")  ''Show on LCD
'                 LCD_Out(2,1, "Value: ")  ''Show on LCD
                 Delay_mS(100)
              else
'              var_in=var_in+1
                 LCD_Out(2,9, "Off setting")  ''Show on LCD
'                 LCD_Out(2,1, "Value: ")  ''Show on LCD
                 Delay_mS(100)
              end if
            case 3   'on Mode
              Lcd_0()
              if chanel_conflict=1 then
              on_off2=1
              end if
              if on_off2=1 then
               LCD_Out(1,2, "On setting")  ''Show on LCD

              Delay_mS(400)
              if  chanel >1 then
               on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_a_0[week_new-1][chanel-2][Pwm_chanel-1][on_off2][1]
               on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_a_0[week_new-1][chanel-2][Pwm_chanel-1][on_off2][2]+1
              end if
              Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
              for Pwm_chanel=1 to 7
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=1 ''Enable on for on hour
              next Pwm_chanel
'              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
              Keypad_set__date_time_import_On_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
              for Pwm_chanel=1 to 7
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              next Pwm_chanel
'              inttostr(on_a_0 [week_new-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????

              else
                  k_set=k_set+1
              end if
            case 4  'Off mode
'              if on_off2=2  then
              LCD_Out(1,2, "Off setting")  ''Show on LCD
              on_off2=2
              Delay_mS(400)
              Lcd_0()

'              LCD_Out(1,1, "< Hour set >")  ''Show on LCD
'               Keypad_set__date_time_import_On_hour_teben(week_new,1,1,23,0)
'                  Keypad_set__date_time_import_On_hour_teben(week,hours,minutes,23,0)
'                  hours= on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]
'                  minutes=  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]
'                  Keypad_set__date_time_import_On_hour_teben(week_new,hours,minutes,23,0)
'  ##################          hour _off time < Hour on_time check
                   if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1] then
                      on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]=on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]
                   end if
               if (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]) and  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1])then
                  on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]
              end if

              Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
              ''        hour _off time < Hour on_time check
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global

              while  on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]
                        LCD_Out(1,1, "Off Hour must be ")
                        LCD_Out(2,1, "bigger from on time")
                         Delay_mS(1400)
                        Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
                        on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
              Wend
              for Pwm_chanel=1 to 7
              on_off22=var_in_global
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
              next  Pwm_chanel
              Keypad_set__date_time_import_off_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
              ''        min _off time < Hour on_time check  and   hour _off time = Hour on_time check
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              while  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]) and  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1])
                        LCD_Out(1,1, "Off miniut  ust be ")
                        LCD_Out(2,1, "bigger from on time")
                         Delay_mS(1400)
'                                      Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
                        Keypad_set__date_time_import_off_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
                        on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              Wend
              for Pwm_chanel=1 to 7

              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=1 ''Enable OFF for on hour
              next  Pwm_chanel
              inttostr(on_a_0 [week_new-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
              LCD_Out(2,5, txt)          '' k_set=k_set+1
              chanel_conflict=0
              if  chanel >1 then
              for ch=1 to chanel
                 if  chanel <> ch then        ''hour_OFF Chanle == hour_off others
                  if  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]) then
                                                                ''OFF Chanle < off others
                  if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2] <on_a_0[week_new-1][ch-1][Pwm_chanel-1][on_off2-1][2] then  ''off-chanel<off pervisue

                                                                 ''OFF Chanle > on others
                    if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2] >on_a_0[week_new-1][ch-1][Pwm_chanel-1][on_off2-2][2]  then ''off-chanel>On pervisue
                        LCD_Out(1,1, "Two Chanel have conflicted") Delay_mS(1400)
                        chanel_conflict=1
'                        k_set=k_set-2
                        else

'                        LCD_Out(1,1, "More On & Off Mode?")
'                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
'                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(100)
                     end if
                   end if
                 end if
                 end if
                next ch
                else     ''chanel == 1
'                        LCD_Out(1,1, "More On & Off Mode?")
'                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
'                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(100)
              end if
              if chanel_conflict=0 then
                        LCD_Out(1,1, "More On & Off Mode?")
                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(400)
              else
               k_set=k_set-2
              end if
'             end if
            case 5
                on_off2=1 ''On method
                 for ch=1 to chanel
                 for md=1 to 7


                      Keypad_set__date_time_import_PWM_Red_teben(ch,md,on_a_0[week_new-1][ch-1][md-1][on_off2-1][3],99,0,on_a_0[week_new-1][0][md-1][on_off2-1][3],on_a_0[week_new-1][1][md-1][on_off2-1][3],on_a_0[week_new-1][2][md-1][on_off2-1][3],on_a_0[week_new-1][3][md-1][on_off2-1][3],0,0,0,0,0)''on_a_0[week_new-1][4][md-1][on_off2-1][3],0,0,0,0) ''on_a_0[week_new-1][5][md-1][on_off2-1][3],on_a_0[week_new-1][6][md-1][on_off2-1][3],0,0) ''on_a_0[week_new-1][7][md-1][on_off2-1][3],on_a_0[week_new-1][8][md-1][on_off2-1][3]) ''(dim mode_1,Pwm_chanel,var_in as byte, dim p_max as  byte, dim p_min as  byte )
                      on_a_0[week_new-1][ch-1][md-1][on_off2-1][3]=var_in_global


                 next md
                 next ch
                  k_set=k_set+1
            case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
'                  Keypad_set__date_time_import(ex,1 , 0 )
                  Keypad_set__date_time_import_save_exit_teben (week_new,ex,1,0)
                  ex= var_in_global
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
'                     on_a_0=on_a_0
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                    LCD_Out(1,1, "Writing to EEPRO")   LCD_Out(2,1, "M ...")
                    eeprom_save()
'                    eeprom_save_ext_twi()
                  else
                  while_state_2=0
                  on_a_0 =on_a_1
                  eeprom_save()
'                  eeprom_save_ext_twi()
'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 22   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 66   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 44   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 55   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 66   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)

            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
'* Keypad PROGRAM


'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Relay_set__date_time_stack_overflow()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_0=on_a_0
        oldstate_2 = 0
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
          week=week_new
            txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
            if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
'            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)

'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)

            k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
           case 1
            txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                    on_a_0=on_a_0
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 0   'one and off

                  text_1="On and Off"
'                  Delay_mS(100)
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
                  on_off22=var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
                  inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,11, txt)
                  inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,1, txt)
'                  Delay_mS(100)
            case 1
                   txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
            case 2

                  text_1="week"
                  Keypad_set__date_time_import(week,7 , 1  )
                  week   =var_in_global


            case 3
                  text_1="Chanel"
'                  Keypad_set__date_time_import_lcd(chanel, 5 , 1  )
'                  chanel   =var_in_global

            case 4


               text_1="hours"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
                  hours   =var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=hours
'                  on_a[week][chanel][0]=hours
            case 5
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2] ,59 , 0  )
'                  delay_ms(500)
'                   on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =var_in_global
                    minutes_1 =var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=minutes_1
'                  on_a[week][chanel][1]=minutes

'
           case 6   'pwm chnael color
                  text_1="PWM Chanel color"
                  Keypad_set__date_time_import_lcd(Pwm_chanel, 7 , 1  )
                  Pwm_chanel   =var_in_global

'                  on_a[week-1][chanel-1][on_off][Pwm_chanel-1][2]=Pwm_chanel
'
           case 7   'pwm Precent
                  text_1="PWM Precent"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0  )
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global
'                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]=Pwm_Percent
'

            case 8  'Save key
                 text_1="<Save> and Exit"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                      on_a_0=on_a_0
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if



'               text_1="off"
'                  Keypad_set__date_time_import_lcd(month,12 , 1  )
'                  month   =var_in_global
'

            case 9  'exit key
                 text_1="<Exit> No save"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if



          end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 1
             txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1 )
            on_off2=var_in_global
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                     on_a_0=on_a_0
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Relay_set__date_time(dim week_new,chanel,Pwm_chanel,on_off2 as byte)
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
     dim on_a_1 as integer[4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1[0]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]
        on_a_1[1]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]
        on_a_1[2]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]
        on_a_1[3]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]
        oldstate_2 = 0
'        week=2   chanel=1 Pwm_chanel=1  on_off=0  chanel=1
        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         week=week_new
         Shamsi_transfer_time()

         txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)

           LCD_Out(2,9, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)

'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)

            k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set


            case 1   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_1[1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[1],23 , 0)
            on_off22=var_in_global
            on_a_1[1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_1[2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[2],59 , 0)
            on_off22=var_in_global
            on_a_1[2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_1[3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_1[3], 100 , 0 )
             on_a_1[3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_1 [0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
'                    on_a_0=on_a_1
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 1   'one and off

                  text_1="On and Off"
'                  Delay_mS(100)
                  Keypad_set__date_time_import_lcd(on_a_1[0],1 , 0  )
                  on_off22=var_in_global
                  on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
                  inttostr(on_a_1 [0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,11, txt)
                  inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,1, txt)
'                  Delay_mS(100)

            case 2

                  text_1="week"
                  Keypad_set__date_time_import(week,7 , 1  )
                  week   =var_in_global


            case 3
                  text_1="Chanel"
'                  Keypad_set__date_time_import_lcd(chanel, 5 , 1  )
'                  chanel   =var_in_global

            case 4


               text_1="hours"
                  Keypad_set__date_time_import_lcd(on_a_1[1],23 , 0)
                  hours   =var_in_global
                  on_a_1[1]=hours
'                  on_a[week][chanel][0]=hours
            case 5
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(on_a_1[2] ,59 , 0  )
'                  delay_ms(500)
'                   on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =var_in_global
                    minutes_1 =var_in_global
                  on_a_1[2]=minutes_1
'                  on_a[week][chanel][1]=minutes

'
           case 6   'pwm chnael color
                  text_1="PWM Chanel color"
                  Keypad_set__date_time_import_lcd(Pwm_chanel, 7 , 1  )
                  Pwm_chanel   =var_in_global

'                  on_a[week-1][chanel-1][on_off][Pwm_chanel-1][2]=Pwm_chanel
'
           case 7   'pwm Precent
                  text_1="PWM Precent"
                  Keypad_set__date_time_import_lcd(on_a_1[3], 100 , 0  )
                  on_a_1[3]   =var_in_global
'                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]=Pwm_Percent
'

            case 8  'Save key
                 text_1="<Save> and Exit"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                      on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if



'               text_1="off"
'                  Keypad_set__date_time_import_lcd(month,12 , 1  )
'                  month   =var_in_global
'

            case 9  'exit key
                 text_1="<Exit> No save"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if



          end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 1   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1[0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_1[1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[1],23 , 0)
            on_off22=var_in_global
            on_a_1[1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_1[2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[2],59 , 0)
            on_off22=var_in_global
            on_a_1[2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_1[3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_1[3], 100 , 0 )
             on_a_1[3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

 sub procedure Lcd_Keypad_3(dim q_1,q_2,q_3,ch as integer)
'                  txt1 = "Cal Rel Pwm <Ex>"
                   Lcd_0()
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, q_1, ch)
                 Lcd_Chr(2, q_2, ch)
                 Lcd_Chr(2, q_3, ch)
                 Delay_mS(200)
 end sub
 sub procedure Lcd_Keypad_4(dim q_1,q_2,q_3,ch as integer)
'                  txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, q_1, ch)
                 Lcd_Chr(2, q_2, ch)
                 Lcd_Chr(2, q_3, ch)
                 Delay_mS(200)
 end sub
 sub procedure Keypad_Relay_set__date_time_On_off()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = " <<  On Enable >>"
   inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
   LCD_Out(2,6, txt)
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
'  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
'       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
            txt1 = " On  Off  <Exit>"
           if (kp1=0) then  '<Exit mode>
              kp1=8
'              txt1 = "On Off <Exit>"
               Lcd_0()
               txt1 = " <<  Exit & Not save >>" LCD_Out(1,1, txt)
               inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
               LCD_Out(2,6, txt)
'               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
             kp1=kp1-1
            if (kp1=0) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
           txt1 = " On  Off  <Exit>"
            if (kp1=2) then
              kp1=0
'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            else
              kp1=kp1+1
              if (kp1=2) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
              end if

              if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'               Lcd_Out(1,1,txt1)
'               Lcd_Chr(2, 6, 94)
'               Lcd_Chr(2, 7, 94)
'               Lcd_Chr(2, 8, 94)
              end if
            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????

              txt1 = " On  Off  <Exit>"
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub
 '**************************************************************************************************


 sub procedure Keypad_Relay_set__date_time_On_and_off()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = " On  Off  <Exit>"
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
'  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
'       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
            txt1 = " On  Off  <Exit>"
           if (kp1=0) then  '<Exit mode>
              kp1=2
'              txt1 = "On Off <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
             kp1=kp1-1
            if (kp1=0) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
           txt1 = " On  Off  <Exit>"
            if (kp1=2) then
              kp1=0
'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            else
              kp1=kp1+1
              if (kp1=2) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
              end if

              if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'               Lcd_Out(1,1,txt1)
'               Lcd_Chr(2, 6, 94)
'               Lcd_Chr(2, 7, 94)
'               Lcd_Chr(2, 8, 94)
              end if
            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
              on_off=kp1+1
              txt1 = " On  Off  <Exit>"

               ''Keypad_Relay_set__date_time(week_new,chanel,Pwm_chanel,on_off) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
                           Keypad_Relay_set__date_time_stack_overflow()
'
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub



 '**************************************************************************************************


 sub procedure Keypad_Relay_set_Pwm_chanel()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<red  grn  blue>"
    txt ="<red  grn  blue>"
   txt2 ="<yelw whit ulbl>"
   txt3="<Uv     <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0   '' week_new=week
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
'              chanel=kp1
'              txt1 = " On  Off  <Exit>"
               Pwm_chanel=kp1+1
               Keypad_Relay_set__date_time_On_and_off()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

 '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Blinking(dim kp1,Kp_max,Kp_min,sate as integer)
 oldstate_up=0  oldstate=0 oldstate_down=0 oldstate_ok=0 while_satat=1
  if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate = 1
      Lcd_0()
      txt1 = "<Exit is selected>"
       Lcd_Out(1,1,txt1)
      Delay_mS(400)                      ' Update flag
   end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state_blinking=0
       while_satat=0
       while_satate_in_1=0
       kp=3
     end if
      if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
      Delay_mS(200)
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
        while_state_blinking=0
          Lcd_Cmd(_LCD_CLEAR)               ' Clear display
            Lcd_Cmd(_LCD_CURSOR_OFF)          ' Cursor off
           if (kp=Kp_min) then
              kp=Kp_Max
              txt1 = "Cal Rel Pwm <Ex>"
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else
            kp=kp-1
              if kp =0 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 1, 94)
                 Lcd_Chr(2, 2, 94)
                 Lcd_Chr(2, 3, 94)
              end if
              if kp =1 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 5, 94)
                 Lcd_Chr(2, 6, 94)
                 Lcd_Chr(2, 7, 94)
              end if
              if kp =2 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 9, 94)
                 Lcd_Chr(2, 10, 94)
                 Lcd_Chr(2, 11, 94)
              end if
            end if
    end if
     if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical UP setting key
      oldstate_up = 1                      ' Update flag
      Delay_mS(200)

      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
            while_state_blinking=0
            Lcd_0()
           if (kp=Kp_Max) then
              kp=Kp_min
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 1, 94)
                 Lcd_Chr(2, 2, 94)
                 Lcd_Chr(2, 3, 94)
            else
            kp=kp+1
              if kp =3 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 13, 94)
                 Lcd_Chr(2, 14, 94)
                 Lcd_Chr(2, 15, 94)
              end if
              if kp =1 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 5, 94)
                 Lcd_Chr(2, 6, 94)
                 Lcd_Chr(2, 7, 94)
              end if
              if kp =2 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 9, 94)
                 Lcd_Chr(2, 10, 94)
                 Lcd_Chr(2, 11, 94)
              end if

            end if


      end if
      if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
      Lcd_0()
      txt1 = "ok"
       Lcd_Out(1,1,txt1)
      Delay_mS(100)
    end if
     if ((oldstate_ok)  and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      oldstate_ok=0
       while_state_blinking=0
      while_satate_in_1=0
      while_satat=0
     end if
'     txt1 = "enterrrrr"
'     Lcd_Out(1,1,txt1)
 end sub



sub procedure lcd_key_mode_day(dim kp1,kp1_max,call_0 as byte  )
   dim txt3 as string[11]
   Lcd_0()
   txt = "<mode1 mode2 mode3>"
   txt2 = "<mode4 mode5 mode6>"
   txt3="< mode7 <Exit> >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=kp1_max
              txt1 = txt3
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
            if  call_0=0 then
             kp1=kp1-1
             else
             kp1=kp1+1
             end if
            if (kp1=0) then            ' ON Mode

              txt1 = txt
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
               Lcd_Keypad_3(10,11,12,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(1,2,3,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(5,6,7,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(9,10,11,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
               Lcd_Keypad_3(1,2,3,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if


            end if
 '**************************************************************************************************
  end sub

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}

 sub procedure Keypad_Relay_set__date_time01()
'   dim kp1, ok1  as integer
'     dim txt3 as string[11]
'     ok1  as integer
   Lcd_0()
   txt = "<mod1 mode2 mod3>"
   txt2 = "<mod4 mode5 mod6>"
   txt3="< mod7 <Exit> >"
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
'       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
        lcd_key_mode_day(kp1,7,0)

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           lcd_key_mode_day(kp1,7,1)

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if

      Delay_mS(1500)
   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????

'              txt1 = " On  Off  <Exit>"
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub
 '**************************************************************************************************

 '**************************************************************************************************


 sub procedure Keypad_Relay_set_Mode()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<mod1 mod2 mod3>"
    txt = "<mod1 mod2 mod3>"
   txt2 = "<mod4 mod5 mod6>"
   txt3=  "<mod7   <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
              chanel=kp1+1
'              txt1 = " On  Off  <Exit>"
               Keypad_Relay_set_Pwm_chanel()
'              Keypad_Relay_set__date_time(week_new,chanel,1,on_off) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

 '**************************************************************************************************


 sub procedure Keypad_Relay_set_day()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<Satd Sund Mond>"
    txt ="<Satd Sund Mond>"
   txt2 ="<Tued Wend Thud>"
   txt3="<Frid   <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0    week_new=week
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'
          if kp=7 then
            inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
          else
           week_new=kp1+1

               Keypad_Relay_set_Mode()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
          end if

          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
'              chanel=kp1
'              txt1 = " On  Off  <Exit>"
               week_new=kp1+1
'               inttostr(week_new,txt)
'                LCD_Out(1,1, txt)
'                Delay_mS(1500)
'               Keypad_Relay_set_Mode()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_3()

'  dim oldstate,oldstate_up,oldstate_down,oldstate_ok,oldstate_ww,while_state as bit
'  dim kp,ok,k_set as  integer
  kp=0
  ok=0



     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_state_blinking=1
     while_satate_in_1=1
     txt1 = "Calen Lamps <Ex>"
'      txt1 = ttt
'     while (while_state_blinking)
'                 Lcd_Cmd(_LCD_BLINK_CURSOR_ON)
                 Delay_mS(500)
                  Lcd_Keypad_3(4,2,3,94)
'                 txt1 = "Cal Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, " ")
'                 Lcd_Chr(2, 2, " ")
'                 Lcd_Chr(2, 3, " ")
'                Keypad_Blinking( kp,3,0,while_satate_in_1)
'                while_satate_in_1=while_satat
'     wend
'     txt1 = "LOOP"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(1100)
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (True) then  'if (PINA1_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0 while_state=0  while_satate_in_1=0  kp=3
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1, "<Exit> is Selected")
'      Delay_mS(500)
'      Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'      Lcd_Cmd(_LCD_CURSOR_OFF)          ' Cursor off
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1, "<Exit> is Selected")
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
       Delay_mS(200)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
           if (kp=0) then
              kp=2
              Lcd_Keypad_3(13,14,15,94)
'              while_state_blinking=1
'              while while_state_blinking
                txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "cal Rel Pwm     "
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 13, 94)
'                 Lcd_Chr(2, 14, 94)
'                 Lcd_Chr(2, 15, 94)
'                 Delay_mS(500)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
            else
            kp=kp-1
              if kp =0 then

'                 while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
'                 Delay_mS(500)
                  Lcd_Keypad_3(4,2,3,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
              end if
              if kp =1 then

'                 while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal     Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 5, 94)
'                 Lcd_Chr(2, 6, 94)
'                 Lcd_Chr(2, 7, 94)
'                 Delay_mS(500)
                 Lcd_Keypad_3(8,9,10,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if
              if kp =2 then

'                      while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal Rel     <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 9, 94)
'                 Lcd_Chr(2, 10, 94)
'                 Lcd_Chr(2, 11, 94)

                 Lcd_Keypad_3(15,13,14,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
              end if

            end if


      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0 while_state_blinking=1
           Lcd_0()
           if (kp=2) then
              kp=0
'               while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
                  Lcd_Keypad_3(4,2,3,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
            else
            kp=kp+1
              if kp =2 then
'               while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "cal Rel Pwm     "
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 13, 94)
'                 Lcd_Chr(2, 14, 94)
'                 Lcd_Chr(2, 15, 94)
                  Lcd_Keypad_3(13,14,15,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend


              end if
              if kp =1 then

'                  while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal     Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 5, 94)
'                 Lcd_Chr(2, 6, 94)
'                 Lcd_Chr(2, 7, 94)
                 Lcd_Keypad_3(8,9,10,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if
              if kp =2 then

'                   while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal Rel     <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 9, 94)
'                 Lcd_Chr(2, 10, 94)
'                 Lcd_Chr(2, 11, 94)
                 Lcd_Keypad_3(13,14,15,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if

            end if

      Delay_mS(100)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
      if (kp=2) then

        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
      else

         LCD_Out(1,1, "Setting is actived")  ''Show on LCD
      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
      Delay_mS(100)
      end if


   wend
        inttostr(kp,txt)
        LCD_Out(1,2, txt)  ''Show on LCD
        Delay_mS(2500)
          select case kp
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp = 0  ' 1
'               Shamsi_call()             ' ????? ???? ? ????? ???
                LCD_Out(2,1, "Case Calend is selected ")  ''Show on LCD
                Keypad_set__date_time()
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Calend is selected ")  ''Show on LCD
'                Delay_mS(1500)

            case 1                             ' ????? ???? ???? ? ????? ??? ??? ??
               LCD_Out(2,1, "Case Lamps is is selected ")  ''Show on LCD
'                Keypad_Relay_set__date_time()
'                 Keypad_Relay_set__date_time_1()
'                 Keypad_Relay_set__date_time01()
'                  Keypad_Relay_set_00()
'                  Keypad_Relay_set_day()
                  Keypad_Relay_set__date_time_stack_overflow_teben()
'
                 LCD_Out(2,1, "end of case Lamps ")  ''Show on LCD
'                  Delay_mS(1500)
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Lamps is is selected ")  ''Show on LCD
'               Delay_mS(1500)
'              kp = 1  ' 1
            case 22
'              Keypad_set__relay_time()
               LCD_Out(2,1, "Case Lamps is selected ")  ''Show on LCD
'                Keypad_set__date_time()
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case PWM  is selected ")  ''Show on LCD
'                Delay_mS(1500)
'              kp = 2  ' 2
            case 2
              inttostr(kp,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case  Exit is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 4
              kp = 4  ' A
          end select
          Delay_mS(500)

     'LCD_Out(1,1, "end of loop")  ''Show on LCD
end sub


' ######################################################################################################################################
sub procedure PWM_Initialize ()
dim j as byte
    k as integer
J=0

   ' DDD2_bit = 1
    'DDd6_bit = 1                    ' set portd pin0 as output pin for ufa fountain
   DDB4_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB5_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB6_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB7_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDE3_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)
   DDE4_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)
   DDE5_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)
    'DDD4_bit = 1                      'Set PORTD pin 4 as output pin for the PWM1 (according to datasheet oc1a)
    'DDD5_bit = 1                      'Set PORTD pin 5 as output pin for the PWM1 (according to datasheet oc1b)

'    PWM1_Init(_PWM1_FAST_MODE, _PWM1_PRESCALER_8, _PWM1_NON_INVERTED,J)
    TCCR0 = (1<<FOC2)or (1<<COM21)or(1<<COM20) or(1<<WGM20) or (1<<CS00) ''Pwm0 or pwm1 in meicrobasic
    PWM2_Init(_PWM2_FAST_MODE, _PWM2_PRESCALER_8, _PWM2_NON_INVERTED, J)
    PWM16bit_Init(_PWM16_PHASE_CORRECT_MODE_8BIT, _PWM16_PRESCALER_16bit_8, _PWM16_NON_INVERTED, j , _TIMER1)
    PWM16bit_Init(_PWM16_PHASE_CORRECT_MODE_8BIT, _PWM16_PRESCALER_16bit_8, _PWM16_NON_INVERTED, j , _TIMER3)
'    PWM16bit_Init(_PWM16_PHASE_CORRECT_MODE_8BIT, _PWM16_PRESCALER_16bit_8, _PWM16_NON_INVERTED, j , _TIMER1)
'    PWM_C0_Init()
    PWM1_Set_Duty(j)
    PWM2_Set_Duty(j)
'    PWM3_Set_Duty(j)   ' Se
    ocr0=0 ocr2=0

    for k=0 to 2
'        PWM_MAKE (k*50,255,3)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)
        delay_ms(200)
    next k
'    PWM_MAKE (100,255,1)
'    PWM_MAKE (100,255,2)
'    PWM_MAKE (100,255,3)
'    PWM_MAKE (100,255,4)
'    PWM_MAKE (100,255,5)
'    PWM_MAKE (100,255,6)
'    PWM_MAKE (100,255,7)
'    delay_ms(100)
'    PWM_MAKE (0,255,1)
'    PWM_MAKE (0,255,2)
'    PWM_MAKE (0,255,3)
'    PWM_MAKE (0,255,4)
'    PWM_MAKE (0,255,5)
'    PWM_MAKE (0,255,6)
'    PWM_MAKE (0,255,7)

'    SetPWM0(0)
end sub
sub procedure on_off_initial (dim on_off22,en,hr,mint,prc as byte)
' on_off2=1       'on time
dim Pwm_chanel_ini,chanel_ini,week_ini as byte
     Lcd_0() lcd_out(1,1,"Initialsiing on_a_0")
     delay_ms(500)
     for week_ini =2 to 2
     for Pwm_chanel_ini=1 to 7
     for chanel_ini =1 to 1
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][0] =en
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][1]=hr
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][2] =mint
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][3]=prc
'      Delay_mS(1000)
'       next on_off2
     next chanel_ini
     for chanel_ini =2 to 4
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][0] =0
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][1]=hr
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][2] =mint
         on_a_0 [week_ini-1][chanel_ini-1][Pwm_chanel_ini-1][on_off22-1][3]=0
'      Delay_mS(1000)
'       next on_off2
     next chanel_ini
      next Pwm_chanel_ini
      next week_ini

end sub
sub procedure  WDT_on()



'/* reset WDT */

'_WDR()

'|--------------------------------------------------------------------|
'| Watchdog Timer Prescale Select                           |
'|--------------------------------------------------------------------|
'| WDP3 WDP2 WDP1 WDP0   Number of WDT            Typical Time-out    |
'|                      Oscillator Cycles         at VCC = 5.0V       |
'|--------------------------------------------------------------------|
'|  0   0   0    0   |    2K (2048) cycles           16 ms            |
'|  0   0   0    1   |    4K (4096) cycles           32 ms            |
'|  0   0   1    0   |    8K (8192) cycles           64 ms            |
'|  0   0   1    1   |   16K (16384) cycles        0.125 s            |
'|  0   1   0    0   |   32K (32768) cycles         0.25 s            |
'|  0   1   0    1   |   64K (65536) cycles          0.5 s            |
'|  0   1   1    0   |  128K (131072) cycles         1.0 s            |
'|  0   1   1    1   |  256K (262144) cycles         2.0 s            |
'|  1   0   0    0   |  512K (524288) cycles         4.0 s            |
'|  1   0   0    1   | 1024K (1048576) cycles        8.0 s            |
'|  1   0   1    0   |------------------------------------------------|
'|  1   0   1    1   |                                                |
'|  1   1   0    0   |                                                |
'|  1   1   0    1   |                 R E S E R V E D                |
'|  1   1   1    0   |                                                |
'|  1   1   1    1   |                                                |
'|--------------------------------------------------------------------|
'/* Write logical one to WDCE and WDE */
 WDTCR =(1<<WDP2) or (1<<WDP1)  or (1<<WDP0)
' WDTCR = 0x0F   ' //prescaller time 1,8s
' //////////////////////////////////watchdog enable
'WDTCR |= (1<<WDCE) | (1<<WDE)  ''//watchdog enable
'WDTCR = 0x0F   ' //prescaller time 1,8s
'//////////////////////////////////watchdog enable
 Lcd_Cmd(_LCD_CLEAR)
 Lcd_Out(2,2,"Reset.")
'WDTCR = 0x00
'WDTCR |= (1<<



end sub

sub procedure eeprom()
dim counter,hx,tt,on_off22 as byte
    hx1 as string[2]
    txt_sub as string[4]
    Lcd_0()
'    EEPROM_Write(0x00 ,122 )
'    Lcd_Out(1,1,"EEprom  writed befor" )
        ByteToStr(EEPROM_Read(0x00), txt)
'      Lcd_Out(1,1,"EEprommmmmmmmmm" )
      Lcd_Out(2,1,txt )
       Delay_ms(1000)
    if  (EEPROM_Read(0x00)=122)   then
        Lcd_Out(1,1,"EEprom  writed befor" )
        ByteToStr(EEPROM_Read(0x00), txt)
'      Lcd_Out(1,1,"EEprommmmmmmmmm" )
      Lcd_Out(2,1,txt )
      else
'      EEPROM_Write(0x00 ,122 )

       Lcd_Out(1,1,"not writed" )

      end if
      Delay_ms(1000)
' hx as hec
'  DDB1_bit = 1
     on_off22=1
      for chanel =1 to 4
         on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0] =chanel

      tt=on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0]
'   ByteToHex(tt,hx1)
'   txt = "0x"
'
'
'   strcpy(txt,hx1)  ' copies string 'txt_sub' to 'txt'
'   EEPROM_Write(0x00 ,0x00 )
  for counter = 1 to 4                          ' Fill data buffer
   EEPROM_Write(0x00 + counter,tt )        ' Write data to address 0x100+counter
  next counter
  Delay_ms(1000)
'  EEPROM_Write(0x00 ,122 )

  if (EEPROM_Read(0x00) ) then

     for counter = 1 to  4

      Lcd_0()
      ByteToStr(EEPROM_Read(0x100+counter), txt)
      Lcd_Out(1,1,"EEprom" )
      Lcd_Out(2,1,txt )                 ' Write text in first row
'  Lcd_Out(2,4,txt2)
                            ' Read 32 bytes block from address 0x100
'     PORTC = EEPROM_Read(0x100+counter)          '   and display data on PORT2
     Delay_ms(50)
     next counter
     end if
   next  chanel

end sub


sub procedure interrupt_ISR () org IVT_ADDR_INT2            ''// Interrupt rutine
'dim while_satate_in_1 as bit

  if Interupt_first_time=0 then
     Interupt_first_time=1
     Lcd_0()
     Lcd_Out(1,1,"Interupt_first_time=0")
     Delay_mS(1000)
  else
  SREG_I_bit = 0                                   '' // Disable Interrupts

   WDT_on()
'  INTF2_bit=0                                                  '  // Clear interrupt flag
  INT2_bit = 0
  ' ## ############## Because of Disappering the Pwm Part we need to run this comands #########################
 while_state_import_main=0
Keypad_set__date_time_import_PWM_Red_teben(1,1,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][3],100,0,on_a_0[week_new-1][0][Pwm_chanel-1][on_off2-1][3],on_a_0[week_new-1][1][Pwm_chanel-1][on_off2-1][3],on_a_0[week_new-1][2][Pwm_chanel-1][on_off2-1][3],on_a_0[week_new-1][3][Pwm_chanel-1][on_off2-1][3],0,0,0,0,0)''on_a_0[week_new-1][4][Pwm_chanel-1][on_off2-1][3],0,0,0,0) ''on_a_0[week_new-1][5][Pwm_chanel-1][on_off2-1][3],on_a_0[week_new-1][6][Pwm_chanel-1][on_off2-1][3],0,0) ''on_a_0[week_new-1][7][Pwm_chanel-1][on_off2-1][3],on_a_0[week_new-1][8][Pwm_chanel-1][on_off2-1][3]) ''(dim mode_1,Pwm_chanel,var_in as byte, dim p_max as  byte, dim p_min as  byte )
while_state_import_main=1
 ' ## ############## Because of Disappering the Pwm Part  we need to run this comands #########################

  Keypad_3()
   txt1 = "<int is selected"
       Lcd_Out(1,1,txt1)
if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate = 1
      Lcd_0()
      'txt1 = "<Exit is selected>"
       'Lcd_Out(1,1,txt1)
      Delay_mS(400)                      ' Update flag
   end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       txt1 = "<good>"
       Lcd_Out(1,1,txt1)
           Delay_mS(400)
     end if
  '/* Turn off WDT */

  WDTCR = 0x00
  INT2_bit = 1
'  LCD_Out(1,1, "?nd of keypad3")   Delay_mS(1000)
  SREG_I_bit = 1                                  ''  // Enable Interrupts
'   Lcd_0()
'    LCD_Out(1,1, "?nd of interuppt")
'        inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(1,11, txt)
'            inttostr(week,txt)
'            LCD_Out(2,11, txt)
'            Delay_mS(1000)
 end if
end sub

sub procedure interrupt_ISR_0 () org IVT_ADDR_INT0            ''// Interrupt rutine
'dim while_satate_in_1 as bit

  SREG_I_bit = 0                                   '' // Disable Interrupts

   WDT_on()
  INTF0_bit=0                                                  '  // Clear interrupt flag
  INT0_bit = 0
  Keypad_3()
  '/* Turn off WDT */

  WDTCR = 0x00
  INT0_bit = 1
'  LCD_Out(1,1, "nd of keypad3")   Delay_mS(1000)
  SREG_I_bit = 1                                  ''  // Enable Interrupts
'   Lcd_0()
'    LCD_Out(1,1, "nd of interuppt")
'        inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(1,11, txt)
'            inttostr(week,txt)
'            LCD_Out(2,11, txt)
'            Delay_mS(1000)
end sub


''################# EEPROM Initial #################

sub procedure ext_twi_eeprom_ini()


                    Lcd_0()

                      EEprom_data_read=0
                      Read_eeprom_ext_TWI(0x00)
'                       Read_eeprom_ext_TWI(0)
                     if  (EEprom_data_read =14)   then
                         Lcd_Out(1,1,"ext EEp writed befor" )
                         ByteToStr(EEprom_data_read, txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
                         Lcd_Out(2,1,txt )   delay_ms(500)
                         Lcd_0()
                         Lcd_0()
                         Lcd_Out(1,1,"Reading EEPROM " )
                         Lcd_Out(2,1," ..." )
                         eeprom_call_back_ext_twi()
                          Lcd_Out(1,1,"ext EEp callbacked" )
                          delay_ms(500)
                         EEprom_data_read=0
                         Read_eeprom_ext_TWI(0x04)
                         ByteToStr(EEprom_data_read, txt)
                         Lcd_0()
                         Lcd_Out(1,1,"EEprom-ext 04" )
                         Lcd_Out(2,1,txt)
                         delay_ms(500)


                    else
'                        EEPROM_Write(0x00 ,122 )
                         Lcd_0()
                         Lcd_Out(1,1,"ext not writed111111111" )
                         delay_ms(500)
                         Lcd_0()
                         Lcd_Out(1,1,"Wrting to EEPROM ..." )
                         write_eeprom_ext_TWI(0x00 ,14 )
                         on_off_initial (1,1,0,0,18)    '' On mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
                         on_off_initial (2,1,0,0,18)    '''OFF mode
                          Lcd_0()
                         Lcd_Out(1,1,"Wrting to EEPROM " ) Lcd_Out(2,1,"..." )
                         eeprom_save_ext_twi()
                         Lcd_Out(1,1,"writing ext eeprom" )
                         Lcd_0()
                         Pwm_chanel=1   chanel=1        on_off2=1
'                         week=2
                         ByteToStr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
                          Lcd_Out(1,1,"on_a_0" )
                         Lcd_Out(2,1,txt)
                         delay_ms(500)

                    end if
                    delay_ms(500)
                    Lcd_0()
                         Pwm_chanel=1   chanel=1      on_off2=1
'                         week=2
                         ByteToStr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
                          Lcd_Out(1,1,"on_a_0" )
                         Lcd_Out(2,1,txt)
                         delay_ms(500)
                      Lcd_0()

                      ByteToStr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][3],txt)
                          Lcd_Out(1,1,"precrntage" )
                         Lcd_Out(2,1,txt)
                         delay_ms(500)
                      EEprom_data_read=0
                      Read_eeprom_ext_TWI(0x00)
'                       Read_eeprom_ext_TWI(0)
                     if  (EEprom_data_read=14)   then
                         Lcd_Out(1,1,"11 is good" )
                         ByteToStr(EEprom_data_read,txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
                         Lcd_Out(2,1,txt )
                    else
'                        EEPROM_Write(0x00 ,122 )
                         Lcd_0() Lcd_Out(1,1,"ext not working" )
                         delay_ms(500)
'                          write_eeprom_ext_TWI(0x00 ,13 )
                         Lcd_Out(1,1,"ext not working" )

                    end if
                    delay_ms(500)
                     Lcd_0()
end sub

       ''################# EEPROM Initial #################

sub procedure int_eeprom_ini()     ''internal eeprm of avr

                         Lcd_0()
                        Lcd_Out(1,1,"EEprom  :" )
'                         on_off_initial (1,1,0,1,12)    '' off mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
'                        on_off_initial (2,1,0,0,12)    '''on mode

                     if  (EEPROM_Read(0x00)=12)   then
                         eeprom_call_back()
                         Lcd_Out(1,1,"EEprom  writed befor" )
                         ByteToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
                         Lcd_Out(2,1,txt )
                    else
                        EEPROM_Write(0x00 ,12 )
                        on_off_initial (1,1,0,0,14)    '' off mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
                        on_off_initial (2,1,0,0,14)    '''on mode
                         eeprom_save()
'                         eeprom_save_ext()
                         Lcd_Out(1,1,"not writed" )


                    end if
                     Delay_mS(1500)
end sub
''################# EEPROM Initial #################

sub procedure ext_eeprom_ini()


                    Lcd_0()
'
                     EEprom_data_read=0
                      Read_EEprom(0x00)
                     if  (EEprom_data_read =11)   then
                         Lcd_Out(1,1,"ext EEprom writed befor" )
                         ByteToStr(EEprom_data_read, txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
                         Lcd_Out(2,1,txt )   delay_ms(1500)
                         Lcd_0()
                         EEprom_data_read=0
                         Read_EEprom(0x04)
                         ByteToStr(EEprom_data_read, txt)

                         Lcd_Out(1,1,"EEprom-ext 04" )
                         Lcd_Out(2,1,txt)
                         delay_ms(1500)

                    else
'                        EEPROM_Write(0x00 ,122 )
                         Lcd_Out(1,1,"ext not writed111111111" )
                         delay_ms(1500)
                          Write_EEprom(0x00 ,11 )
                          on_off_initial (1,1,0,0,18)    '' off mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
                          on_off_initial (2,1,0,0,18)    '''on mode
                          eeprom_save_ext()
                         Lcd_Out(1,1,"writing ext eeprom" )

                    end if
                    delay_ms(1500)
                      Lcd_0()
                      EEprom_data_read=0
                      Read_EEprom(0x00)
                     if  (EEprom_data_read=11)   then
                         Lcd_Out(1,1,"11 is good" )
                         ByteToStr(EEprom_data_read,txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
                         Lcd_Out(2,1,txt )
                    else
'                        EEPROM_Write(0x00 ,122 )
                         Lcd_Out(1,1,"ext not working" )
                         delay_ms(1500)
                          Write_EEprom(0x00 ,11 )
                         Lcd_Out(1,1,"ext not working" )

                    end if
                    delay_ms(1500)
                     Lcd_0()
end sub


main:
  DDB0_bit = 1                                       ' set Button pin as input
  DDA2_bit = 1                                        ' set Button pin as input


  DDA5_bit = 1                                        ' set Button pin as input
  DDA4_bit = 1                                        ' set Button pin as input
  DDA3_bit = 1                                        ' set Button pin as input
  DDC2_bit =1   DDC3_bit =1
  DDC4_bit =1   DDC5_bit =1  ' configure PORTD as output
  DDC6_bit =1
  DDC7_bit =1
  'DDD0_bit =0  DDD1_bit =0
   DDD2_bit =0 DDD3_bit =1   DDD4_bit =0  ' configure PORTD as output
  DDD5_bit =0 DDD6_bit =0     DDD7_bit =1
  DDB1_bit =1      DDB3_bit =1
  DDA0_bit =1 DDA1_bit =1      DDA2_bit =1  DDA3_bit =1
'  PORTC = 0xAA                                        ' initial PORTC value
' PWM_Initialize ()

 ''################PWM Ports #############
   DDB4_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB5_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB6_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDB7_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
   DDE3_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)
   DDE4_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)
   DDE5_bit = 1                    ' Set PORTD pin 7 as output pin for the PWM1 (according to datasheet)

      ''################timer test part #############


LCD_Init() ' Initialize LCD
LCD_cmd(_LCD_CLEAR) ' Clear LCD
LCD_cmd(_LCD_CURSOR_OFF)
LCD_Out(2,1,"TEST")
 hours=0x0  minutes=0x0   seconds=0x00 day= 0x2 week=2   month=0x11  year=0x15
'   a = 17
'   year = Dec2Bcd(a) ' b equals 34
  Write_Time(hours, minutes, seconds, 0x13, 0x02,   0x11,year)'
'Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'Shamsi_call()
'  Shamsi_show_lcd( jmonth,jday,jyear,week,hours ,minutes,seconds )


 while_state_import=1
    oldstate_2=0

    chanel=1  Pwm_chanel=1  on_off2=1   week_new=week    chanel_active=1

' ## ############## Because of Disappering the on and off counter we need to run this comands #########################
'  on_off_initial (1,1,0,0,18)    '' on mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
' on_off_initial (2,1,0,0,18)    '''off mode


' ## ############## Because of Disappering the Pwm Part  we need to run this comands #########################
'on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][3]=var_in_global
'Bytetostr(on_a_0 [week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'LCD_Out(1,11, txt)         delay_ms(2000)
'PWM_MAKE (on_a_0[week_new-1][chanel-1][pwm_chanel-1][on_off2-1][3],255,pwm_chanel)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)
'delay_ms(2000)
'Keypad_set__date_time_import_Yes_No_teben( week,chanel,1, 2,1 )
' Keypad_set__date_time_import_PWM_Red_teben(1,1,1,10,0,0,0,0,0,0,0,0,0,0) ''(dim mode_1,Pwm_chanel,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'
' Keypad_set__date_time_import_On_hour_teben(week,hours,minutes,23,0)
' on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
' Keypad_set__date_time_import_On_minut_teben(week,on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],minutes,59,0)
' on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
' LCD_Out(1,1, "More On&Off Mode?")
' LCD_Out(2,1, "yes   or  No")
' LCD_Out(2,1, "      or  No")
'Delay_ms(100)
'  if var_in=1 then
' wend



'Delay_ms(1100)
'ddrb.PINb0_bit=0
'
'ddrb.PINf0_bit=1
'ddrb.PINf1_bit=1
''ddrb.PINb0_bit=0
'portf0_bit=0
'portf1_bit=0
'SetRegister()
'
'if _ss=125 then '"Z?hltor": Abarbeitung jede 0,5 Sekunde (8MHz/1024/125/125)
'portf1_bit=not portf1_bit
'_count=TCNT0
'_ss=0
'ztmp=_zz
'_zz=0
'LCD_init()
'freq = 0.5+((256 * ztmp + _count)*korrekturfaktor)
'''/*********************************************************************************
'''- freq: Ermittlung der Frequenz: Anzahl Timer 0 Overflows + aktuellen Timer 0 Count
'''- die + 0,5 sind zum korrektem "Runden" ->Flie?kommazahl zu Ganzzahl
'''- "korrekturfaktor" ist die SW-Korrektur zur Kompensation der lin.Quarzungenauigkeit
'''**********************************************************************************/
'longwordToStr(freq,anz)
'LCD_Out(1,1,anz + " Hz") ' Write string
'end if
'Delay_ms(500)
''############################end of timer test ################

'    ###################### Start of EEPROM   #########################'
   on_off_initial (1,1,0,0,18)    '' off mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
   on_off_initial (2,1,0,0,18)    '''on mode
   int_eeprom_ini()   ''internal AVR EEPROM Writing
'   ext_eeprom_ini()
'    ext_twi_eeprom_ini()   ''EXternal TWI EEPROM




'    ###################### End of EEPROM   #########################

  Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
  Shamsi_call()
  Shamsi_show_lcd( jmonth,jday,jyear,week,hours ,minutes,seconds )

'  Delay_mS(500)
  miladi_call(jmonth,jday,jyear,week,hours ,minutes,seconds )
'   Delay_ms(500)
'   on_off_initial (1,1,0,1,12)    '' off mode on_off initial (dim on_off22,en,hr,mint,prc as integer)
'   on_off_initial (2,1,0,0,12)    '''on mode
  ' ##########   Interupt enalbleing   ##########
  ' ISC00_bit = 1                                    '' // Set interrupts to be detected on rising edge
'   ISC00_bit = 1
   'SREG_I_bit = 0
'    Delay_ms(500)                                  ''  // Enable Interrupts
 '  SREG_I_bit = 1

 '  INT0_bit = 1

     ' ##########   Interupt 2 enalbleing   ##########
     Interupt_first_time=0
     ISC20_Bit = 1                                    '' // Set interrupts to be detected on rising edge
'   ISC00_bit = 1
    INTF2_bit = 0
    SREG_I_bit = 0
    Delay_ms(100)                                  ''  // Enable Interrupts
    SREG_I_bit = 1

    INT2_bit =1

'#########################################

'#########################################
'  PWM_Initialize ()
  PWM_Initialize ()
'  SetPWM0(0)
  while TRUE




'  week=2
     Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
     Shamsi_call()
     Shamsi_show_lcd( jmonth,jday,jyear,week,hours ,minutes,seconds )
     Delay_mS(500)
     miladi_call(jmonth,jday,jyear,week,hours ,minutes,seconds )
     Delay_mS(500)
     Lcd_0()
'  Lcd_Out(1,1,"r")
'       Pwm_chanel=1   chanel=1        on_off2=1
'       if  (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0]>= 1 ) then
'        Lcd_Out(1,1,"okkkkk")
'         PWM_MAKE (on_a_0[week-1][chanel-1][pwm_chanel-1][on_off2][3],255,pwm_chanel)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)

'          inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(1,11, txt)
'           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][3],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,11, txt)
'           inttostr(week,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,1, txt)
'          else
'          Lcd_Out(1,1,"no   kkkk")
'          PWM_MAKE (on_a_0[week-1][chanel-1][pwm_chanel-1][on_off2][0],255,pwm_chanel)
'          inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(1,11, txt)
'           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][3],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,11, txt)
'           inttostr(week,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,1, txt)
'        end if
'        Delay_mS(500)
'       counter

'     for week =2to 2

     for Pwm_chanel_main=1 to 7
      on_test=0
       for chanel =1 to 4
       for on_off2 =1 to 1
'          WDT_on()

'       on_test=on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'       if  (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2][1]>= hours ) and (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2][0]<>0) and    (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2][2]>= minutes)  then
       if  (on_a_0 [week-1][chanel-1][Pwm_chanel_main-1][on_off2][1]>= hours ) and    (on_a_0 [week-1][chanel-1][Pwm_chanel_main-1][on_off2][2]>= minutes)  and (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2][0]<>0) then  '''OFF mode
'
'         if    (on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2]>= minutes) then '' and (on_a_0[week-1][chanel-1][pwm_chanel-1][0]=1)then
'          #####################  check On is accured and enabled  #############
          if  (on_a_0 [week-1][chanel-1][Pwm_chanel_main-1][on_off2-1][1]<= hours ) and     (on_a_0 [week-1][chanel-1][Pwm_chanel_main-1][on_off2-1][2]<= minutes)  then

           on_test=1
           chanel_active=chanel
           inttostr(chanel_active,txt)
           Lcd_0()
           Lcd_Out(1,1,"CHANEL IS ACTIVE:")
           Lcd_Out(2,1,"main CH:") Lcd_Out(2,8,txt) delay_ms(500)
'           Lcd_0()
'           Lcd_Out(1,1,"on pwm mode")
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           PWM_MAKE (on_a_0[week-1][chanel-1][pwm_chanel-1][on_off2-1][3],255,pwm_chanel)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)
'
'           LCD_Out(1,13, txt)
'           inttostr(on_off,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,1, txt)
'           inttostr(pwm_chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(2,4, txt)
'           Delay_mS(500)
           end if
      else
      if (on_test=0) then
'        Lcd_0()
        Lcd_Chr(2, 6, (hours div 10)   + 48)
        Lcd_Chr(2, 7, (hours mod 10)   + 48)  Delay_mS(1000)
'        inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'           LCD_Out(1,11, txt)
'            inttostr(Pwm_chanel,txt)
'            LCD_Out(2,11, txt)
'           Lcd_Out(1,1,"offfff")
'           Delay_mS(500)
'           PWM_MAKE (0,255,pwm_chanel)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)
'            Delay_mS(500)
      end if
      end if
'      Delay_mS(1000)

      next on_off2
       next chanel

       chanel=chanel_active
       inttostr(chanel,txt)
       Lcd_Out(1,1,"CHANEL IS ACTIVE:")
       Lcd_Out(2,1,"CH:") Lcd_Out(2,4,txt) delay_ms(500)
       if   (on_test=1) then
       Lcd_0()
           Lcd_Out(1,1,"on pwm mode")
           bytetostr(chanel,txt)
                              ' ??? ????? ???? ? ?????? ????? ? ????
           PWM_MAKE (on_a_0[week-1][chanel-1][Pwm_chanel_main-1][on_off2-1][3],255,Pwm_chanel_main)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)

           LCD_Out(1,13, txt)

           bytetostr(Pwm_chanel_main,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,3, txt)
           bytetostr(on_off,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,1, txt)
           Delay_mS(500)
'            PWM_MAKE (on_a_0[week-1][chanel-1][pwm_chanel-1][on_off2-1][3],255,pwm_chanel)''(dim jj as byte,dim max_duty,Pwm_chanel as integer)
       else
        Lcd_0()
'        Lcd_Chr(2, 6, (hours div 10)   + 48)
'        Lcd_Chr(2, 7, (hours mod 10)   + 48)
            bytetostr(on_a_0 [week-1][chanel-1][Pwm_chanel_main-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
            LCD_Out(1,11, txt)
            bytetostr(Pwm_chanel_main,txt)
            LCD_Out(2,11, txt)
           Lcd_Out(1,1,"offfff")
           Delay_mS(500)
           PWM_MAKE (0,255,Pwm_chanel_main)
       end if
      next Pwm_chanel_main
'      next week




  wend                                                ' endless loop
end.